(* Zustaende *)
VAR
	z_0 : BOOL := FALSE; (* Leerlauf *)
	z_1 : BOOL := FALSE; (* Befuellen und Mischen *)
	z_2 : BOOL := FALSE; (* Mischen *)
	z_3 : BOOL := FALSE; (* Schieber auffahren und Abtransport *)
	z_4 : BOOL := FALSE; (* Abtransport *)
	z_5 : BOOL := FALSE; (* Bandnachlaufzeit *)
	z_6 : BOOL := FALSE; (* Schieber zufahren *) (* Schalt- und Transitionsvariablen *)
	xB_T0 : BOOL := FALSE; (* Transition von z_0 nach z_1 *)
	xB_T1 : BOOL := FALSE; (* Transition von z_1 nach z_2 *)
	xB_Befuelle1 : BOOL := FALSE; (* Befuellung aus Silo 1 *)
	xB_Befuelle2 : BOOL := FALSE; (* Befuellung aus Silo 2 *)
	xB_FehlerFuellstand1 : BOOL := FALSE; (* Fehlermeldung Visu wg Fuellstand 1 *)
	xB_FehlerFuellstand2 : BOOL := FALSE; (* Fehlermeldung Visu wg Fuellstand 1 *)
	xB_S2_sF : BOOL := FALSE; (* steigende Flanke an S2 *)
	xB_Auto : BOOL := FALSE; (* Automatikbetrieb aktiv *) (* Zeitvariablen *)
	xA_T1 : INT := 0; (* Zeitmessung im z_1 *)
	xA_T2 : INT := 0; (* Zeitmessung im z_2 *)
	xA_T5 : INT := 0; (* Zeitmessung im z_5 *)
	xA_T_Takt : INT := 0; (* Zeitmessung Taktgeber *)
	xB_T2 : BOOL := FALSE; (* Weiterschaltzeitpunkt erreicht *)
	xB_T5 : BOOL := FALSE; (* Weiterschaltzeitpunkt erreicht *)
	xB_T_Takt : BOOL := FALSE; (* Schaltausgang Taktgeber *) (* Silos *)
	typSilo_Silo1 : Silo; (* Funktionsbaustein Silo 1 *)
	typSilo_Silo2 : Silo; (* Funktionsbaustein Silo 2 *)
	xA_h1 : REAL := 0; (* Errechnete Fuellhoehe Silo 1 *)
	xA_h2 : REAL := 0; (* Errechnete Fuellhoehe Silo 2 *)
	xA_SwMenge1 : REAL := 0; (* Sollwert der abzuwiegenden Menge aus Silo 1 *)
	xA_SwMenge2 : REAL := 0; (* Sollwert der abzuwiegenden Menge aus Silo 2 *) (* "temporaere" Variablen *)
	tmpB_S2 : BOOL := FALSE; (* Letzter Zustand von Taster S2 *) (* Durchflussregelung *)
	typPiRegler_Durchflussregler : PiRegler;
END_VAR
(* Zeitkonstanten *)
VAR CONSTANT
	cA_T1 : INT := 10000; (* Befuellzeit *)
	cA_T2 : INT := 20000; (* Mischernachlaufzeit *)
	cA_T5 : INT := 5000; (* Bandnachlaufzeit *)
	cA_T_Takt : INT := 500; (* Taktzeit / 2 *)
	cA_T_Zykl : INT := 100; (* Umrechnungskonstanten Analogwerte *)
	cA_k_h1 : REAL := 99 / 32767;
	cA_k_h2 : REAL := 99 / 32767;
END_VAR
